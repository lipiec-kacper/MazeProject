{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/boss\/bosscharacter\/init(name:health:attack:)","title":"init(name: String, health: Int, attack: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/boss\/bosscharacter\/attack","title":"var attack: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/boss\/bosscharacter\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/boss\/bosscharacter\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/prog2_2023_project\/boss\/bosscharacter","title":"Boss.BossCharacter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/boss\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/boss\/bossdamage(bosstype:)","title":"func bossDamage(bossType: BossType) -> Int","type":"method"},{"path":"\/documentation\/prog2_2023_project\/boss\/bosshealth(bosstype:)","title":"func bossHealth(bossType: BossType) -> Int","type":"method"},{"path":"\/documentation\/prog2_2023_project\/boss\/bossname(bosstype:)","title":"func bossName(bossType: BossType) -> String","type":"method"}],"path":"\/documentation\/prog2_2023_project\/boss","title":"Boss","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/character\/init(name:health:)","title":"init(name: String, health: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/character\/health","title":"var health: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/character\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/character","title":"ChoseYourCharacter.Character","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/nameplayer1","title":"var Nameplayer1: ChoseYourCharacter.Character","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/chosecharacter(inventory:)","title":"func choseCharacter(Inventory: Inventory)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/getmyhealth()","title":"func getMyHealth() -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/charactertype\/guardian","title":"case guardian","type":"case"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/charactertype\/scientist","title":"case scientist","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/charactertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/charactertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/choseyourcharacter\/charactertype","title":"ChoseYourCharacter.CharacterType","type":"enum"}],"path":"\/documentation\/prog2_2023_project\/choseyourcharacter","title":"ChoseYourCharacter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/controller\/init(game:)","title":"init(game: Game)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/controller\/commands","title":"var commands: [String : Command]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/controller\/game","title":"let game: Game","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/controller\/deregister(keyword:)","title":"func deregister(keyword: String)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/controller\/execute(command:arguments:)","title":"func execute(command: String, arguments: [String]) throws","type":"method"},{"path":"\/documentation\/prog2_2023_project\/controller\/register(keyword:command:)","title":"func register(keyword: String, command: Command)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/controller","title":"Controller","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/fight\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/fight\/win","title":"var win: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/fight\/getwin()","title":"func getWin() -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/fight\/setwinfalse()","title":"func setWinFalse()","type":"method"},{"path":"\/documentation\/prog2_2023_project\/fight\/start(character:boss:inventory:)","title":"func start(character: ChoseYourCharacter, boss: BossType, inventory: Inventory)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/fight","title":"Fight","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/gocommand\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/gocommand\/run(game:arguments:)","title":"func run(game: Game, arguments: [String])","type":"method"}],"path":"\/documentation\/prog2_2023_project\/gocommand","title":"GoCommand","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/numberofguesses","title":"var numberOfGuesses: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/playerwin","title":"var playerWin: Bool","type":"property"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/randomnumber","title":"let randomNumber: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/getwin()","title":"func getWin() -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/guessthenumber\/playgame()","title":"func playGame()","type":"method"}],"path":"\/documentation\/prog2_2023_project\/guessthenumber","title":"GuessTheNumber","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/heal\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/heal\/healname(healtype:)","title":"func healName(healType: HealAvalaible) -> String","type":"method"},{"path":"\/documentation\/prog2_2023_project\/heal\/healingpoint(healname:)","title":"func healingPoint(healname: String) -> Int","type":"method"}],"path":"\/documentation\/prog2_2023_project\/heal","title":"Heal","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/helpcommand\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/helpcommand\/run(game:arguments:)","title":"func run(game: Game, arguments: [String])","type":"method"}],"path":"\/documentation\/prog2_2023_project\/helpcommand","title":"HelpCommand","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/heals","title":"let heals: Heal","type":"property"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/inventory","title":"var inventory: [[Any]]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/weapon","title":"let weapon: Weapons","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/addheal(heal:)","title":"func addHeal(heal: HealAvalaible)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/addweapon(weapons:)","title":"func addWeapon(Weapons: WeaponsAvalaible)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/getheals()","title":"func getHeals()","type":"method"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/getinventory()","title":"func getInventory()","type":"method"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/getweapons()","title":"func getWeapons()","type":"method"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.class\/removeheal(choice:)","title":"func removeHeal(choice: Int)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/inventory-swift.class","title":"Inventory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/maze\/init(x:y:)","title":"init(x: Int, y: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/maze\/mazearray","title":"var mazeArray: [String]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/maze\/x","title":"var x: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/maze\/xcharacter","title":"var xCharacter: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/maze\/y","title":"var y: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/maze\/ycharacter","title":"var yCharacter: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/maze\/find(character:)","title":"func find(character: String)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/getplayerposition()","title":"func getPlayerPosition() -> (Int, Int)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/getplayerxposition()","title":"func getPlayerXPosition() -> (Int)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/getplayeryposition()","title":"func getPlayerYPosition() -> (Int)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/newplayerposition(to:)","title":"func newPlayerPosition(to: (Int, Int))","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/playerposition()","title":"func playerPosition() -> (Int, Int)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/remplacecharacter(axis:)","title":"func remplaceCharacter(axis: (Int, Int, String))","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/showcharacter(axis:)","title":"func showCharacter(axis: (Int, Int)) -> String","type":"method"},{"path":"\/documentation\/prog2_2023_project\/maze\/showmaze()","title":"func showMaze()","type":"method"}],"path":"\/documentation\/prog2_2023_project\/maze","title":"Maze","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/moves\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/moves\/gamefinished","title":"var GameFinished: Bool","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/door1","title":"var door1: TicTacToe","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/door2","title":"var door2: GuessTheNumber","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/door3","title":"var door3: TicTacToe","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/door4","title":"var door4: GuessTheNumber","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/door5","title":"var door5: Wordle","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/fight","title":"let fight: Fight","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/mobs","title":"let mobs: [BossType]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/take","title":"var take: Bool","type":"property"},{"path":"\/documentation\/prog2_2023_project\/moves\/xppoints","title":"let xpPoints: XpPoints","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/moves\/minigame(door:)","title":"func minigame(door: MiniGames)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/moveback(maze:)","title":"func moveBack(Maze: Maze)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/moveforward(maze:)","title":"func moveForward(Maze: Maze)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/moveleft(maze:)","title":"func moveLeft(Maze: Maze)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/moveright(maze:)","title":"func moveRight(Maze: Maze)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/takeheal(inventory:heal:)","title":"func takeHeal(Inventory: Inventory, Heal: HealAvalaible)","type":"method"},{"path":"\/documentation\/prog2_2023_project\/moves\/takeweapon(inventory:weapon:)","title":"func takeWeapon(Inventory: Inventory, Weapon: WeaponsAvalaible)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/moves","title":"Moves","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/parser\/init(controller:)","title":"init(controller: Controller)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/parser\/readcommand()","title":"func readCommand() throws","type":"method"}],"path":"\/documentation\/prog2_2023_project\/parser","title":"Parser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/room\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/room\/exits","title":"var exits: [Direction : Room]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/room\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/room\/nextroom(direction:)","title":"func nextRoom(direction: Direction) -> Room?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/room\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/prog2_2023_project\/room\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/room","title":"Room","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/stopcommand\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/stopcommand\/run(game:arguments:)","title":"func run(game: Game, arguments: [String])","type":"method"}],"path":"\/documentation\/prog2_2023_project\/stopcommand","title":"StopCommand","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/nameplayer1","title":"let Nameplayer1: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/nameplayer2","title":"let Nameplayer2: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/grid","title":"var grid: [[String]]","type":"property"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/player1","title":"let player1: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/player2","title":"let player2: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/win","title":"var win: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/checkwin(player:)","title":"func checkWin(player: String) -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/getwin()","title":"func getWin() -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/isfree(row:col:)","title":"func isFree(row: Int, col: Int) -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/playgame()","title":"func playGame()","type":"method"},{"path":"\/documentation\/prog2_2023_project\/tictactoe\/printgrid()","title":"func printGrid()","type":"method"}],"path":"\/documentation\/prog2_2023_project\/tictactoe","title":"TicTacToe","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/weapons\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/weapons\/weapondamage(weapontype:)","title":"func weaponDamage(weaponType: String) -> Int","type":"method"},{"path":"\/documentation\/prog2_2023_project\/weapons\/weaponname(weapontype:)","title":"func weaponName(weaponType: WeaponsAvalaible) -> String","type":"method"}],"path":"\/documentation\/prog2_2023_project\/weapons","title":"Weapons","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/wordle\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/wordle\/attempts","title":"var attempts: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/guessedletters","title":"var guessedLetters: Set<Character>","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/maxattempts","title":"let maxAttempts: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/playerwin","title":"var playerWin: Bool","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/secretword","title":"var secretWord: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/targetword","title":"var targetWord: String","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/wordlength","title":"let wordLength: Int","type":"property"},{"path":"\/documentation\/prog2_2023_project\/wordle\/words","title":"let words: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/wordle\/getwin()","title":"func getWin() -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/wordle\/playgame()","title":"func playGame()","type":"method"}],"path":"\/documentation\/prog2_2023_project\/wordle","title":"Wordle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/xppoints-swift.class\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/xppoints-swift.class\/xp","title":"var xp: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/xppoints-swift.class\/addxp(type:)","title":"func addXp(type: xpType)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/xppoints-swift.class","title":"XpPoints","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/command\/run(game:arguments:)","title":"func run(game: Game, arguments: [String])","type":"method"}],"path":"\/documentation\/prog2_2023_project\/command","title":"Command","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/game\/controller","title":"var controller: Controller","type":"property"},{"path":"\/documentation\/prog2_2023_project\/game\/currentroom","title":"var currentRoom: Room","type":"property"},{"path":"\/documentation\/prog2_2023_project\/game\/finished","title":"var finished: Bool","type":"property"}],"path":"\/documentation\/prog2_2023_project\/game","title":"Game","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/minigames\/getwin()","title":"func getWin() -> Bool","type":"method"},{"path":"\/documentation\/prog2_2023_project\/minigames\/playgame()","title":"func playGame()","type":"method"}],"path":"\/documentation\/prog2_2023_project\/minigames","title":"MiniGames","type":"protocol"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/playercharacter","title":"let PlayerCharacter: ChoseYourCharacter","type":"var"},{"path":"\/documentation\/prog2_2023_project\/inventory-swift.var","title":"let inventory: Inventory","type":"var"},{"path":"\/documentation\/prog2_2023_project\/movment","title":"let movment: Moves","type":"var"},{"path":"\/documentation\/prog2_2023_project\/mymaze","title":"let myMaze: Maze","type":"var"},{"path":"\/documentation\/prog2_2023_project\/xppoints-swift.var","title":"let xpPoints: XpPoints","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/chainchomper","title":"case ChainChomper","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/gelatinouscube","title":"case GelatinousCube","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/hypnoticspecter","title":"case HypnoticSpecter","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/livingshadow","title":"case LivingShadow","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/margitthefellomen","title":"case MargittheFellOmen","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/ratking","title":"case RatKing","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/redwolfofradagon","title":"case RedWolfofRadagon","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/rennalaqueenofthefullmoon","title":"case RennalaQueenoftheFullMoon","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/slime","title":"case Slime","type":"case"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/wanderingeye","title":"case WanderingEye","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/bosstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/bosstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/bosstype","title":"BossType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/commanderror\/commandnotfound(keyword:)","title":"case commandNotFound(keyword: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/commanderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/prog2_2023_project\/commanderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/commanderror","title":"CommandError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/direction\/east","title":"case East","type":"case"},{"path":"\/documentation\/prog2_2023_project\/direction\/north","title":"case North","type":"case"},{"path":"\/documentation\/prog2_2023_project\/direction\/south","title":"case South","type":"case"},{"path":"\/documentation\/prog2_2023_project\/direction\/west","title":"case West","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/direction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/direction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/direction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/prog2_2023_project\/direction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/direction","title":"Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/healavalaible\/bandages","title":"case BANDAGES","type":"case"},{"path":"\/documentation\/prog2_2023_project\/healavalaible\/medikit","title":"case MEDIKIT","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/healavalaible\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/healavalaible\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/healavalaible","title":"HealAvalaible","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/parsererror\/noinputgiven","title":"case noInputGiven","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/parsererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/parsererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/prog2_2023_project\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/parsererror","title":"ParserError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/ak47","title":"case AK47","type":"case"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/fist","title":"case FIST","type":"case"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/glock","title":"case GLOCK","type":"case"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/knife","title":"case KNIFE","type":"case"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/rpg","title":"case RPG","type":"case"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/sword","title":"case SWORD","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/weaponsavalaible\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/weaponsavalaible","title":"WeaponsAvalaible","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/xptype\/boss","title":"case Boss","type":"case"},{"path":"\/documentation\/prog2_2023_project\/xptype\/finalexit","title":"case FinalExit","type":"case"},{"path":"\/documentation\/prog2_2023_project\/xptype\/minigame","title":"case MiniGame","type":"case"},{"path":"\/documentation\/prog2_2023_project\/xptype\/mob","title":"case Mob","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/prog2_2023_project\/xptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/prog2_2023_project\/xptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/prog2_2023_project\/xptype","title":"xpType","type":"enum"}],"path":"\/documentation\/prog2_2023_project","title":"prog2-2023-project","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}
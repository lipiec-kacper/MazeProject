import Foundation
    
class Maze {

    var x: Int
    var y: Int
    
    init(x: Int, y: Int){
        self.x = x
        self.y = y
    }
    
    let mazeArray = [
"+-------------------------------------------------------------------------------+",
"|           |                                           |           |           |",
"|           +---------------+               +-------+   |   +---+   +-------+   |",
"|                           |               |       |   |   |   |   |       |   |",
"|                           +-------+       +---+   +   |   |   |   +   +   +   |",
"|                                   |           |       |   |   |       |       |",
"|-------------------------------+   +-------+   |   +---+   |   +-----------+   |",
"|                               |               |   |       |       |           |",
"|                           +   +---------------|   +---+   |---+   |   +-------|",
"|                           |                   |           |       |           |",
"|                           +---------------+   +-----------+   +---|           |",
"|                           #       |       |           |           |           |",
"|                   +-----------+   |   +   +-------+   +-------+   +-------+   |",
"|                   |           |   |   |           |           |       |       |",
"|                   |   +---+   |   |   +---+   +-----------+   +   +   |   +---|",
"|                   |       |   |   |       |       |       |       |   |       |",
"|   +-----------------------+   |   +-------|   +   +   +   +-------|   |---+   |",
"|           |                   |           |   |       |           |   |       |",
"|-------+   |---+   +---------------+   +   +-------+   |-------+   +   |       |",
"|   |       |       |               |   |           |   |       |       |       |",
"|   +   +---+   +   |               +---|   +---+   |   |   +   +-------|       |",
"|               |   |                   |       |   |   |   |       |   |       |",
"|   +-------------------+               +-------+   |   +   |---+   +   +---+   |",
"|       |               #                           |       |               |   |",
"|   +---+           +   +---------------------------------------------------+   |",
"|___+   #           |   |                           |       |           |       |",
"|       +   +-----------|   +-------------------+   +   +   |   +---+   |   +---|",
"|       |   |           |   |                   |       |   |   |   |   |   |   |",
"|   +---+   |   +---+   +   +-------+           +-------+   |   |   |   |   |   |",
"|   |       |       |       |       |           #   |       |   |   |   |   |   |",
"|   +-----------+   |-------+   +   +-----------+   |   |   |   |   |   +   |   |",
"|                   |           |           |       |   |   |   |   |       |   |",
"|   +-----------------------+   +-------+   |   +   |   +---|   +   +-------+   |",
"|       |   |                   |       |   |   |   |       |           |       |",
"|       |   +   +   +-----------|   +---+   |   |   |---+   +-------+   |---+   |",
"|       |       |               |   |       |   |   |   |               |       |",
"|   +---------------+   +---+   |   |   +---+   |   |   +---------------+       |",
"|   |               |       |   |   |           |   |               |           |",
"|   +               +-------+   |   +-----------+   +-------+   +   +      @    |",
"|                               |               #               |               |",
"+-------------------------------------------------------------------------------+",
]

func find(){
    for (rowIndex, row) in mazeArray.enumerated() {
        for (colIndex, col) in row.enumerated() {
            if col == "#" {
                print("CoordonnÃ©es de '@': (\(rowIndex), \(colIndex))")               //find a special character in the array
            }
        }
    }
}
    
func showMaze(){
    for line in mazeArray{
        print(line)                          
    }
    
}
    
    
//var x: Int {
//        get {
//            return _x
//        }
//        set(newValue) {
//            _x = newValue
//        }
//    }
//
//    var y: Int {
//        get {
//            return _y
//        }
//        set(newValue) {
//            _y = newValue
//        }
//    }
    
    func playerPosition() -> (Int, Int){
        for (rowIndex, row) in mazeArray.enumerated() {
            for (colIndex, col) in row.enumerated() {
                if col == "@" {
                    y = rowIndex
                    x = colIndex
                    
                }
            }
        }
        return (x, y)
    }
    
    func getPlayerPosition() -> (Int, Int){
        return (x, y)
    }
    
    func movePlayer(to newPosition:(Int, Int)) {
        let (newx, newy) = newPosition
        
        x += newx
        y += newy
        
        
        
    }
    
    
}


    
